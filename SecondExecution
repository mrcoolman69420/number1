-- Decompiled with the Synapse X Luau decompiler.

local l__Players__1 = game:GetService("Players");
local l__LocalPlayer__2 = l__Players__1.LocalPlayer;
local l__UserInputService__3 = game:GetService("UserInputService");
local l__ReplicatedStorage__4 = game:GetService("ReplicatedStorage");
local v5 = require(l__ReplicatedStorage__4.Admin.AdminPanel);
local v6 = require(l__ReplicatedStorage__4.Admin.AdminLogs);
local v7 = require(l__ReplicatedStorage__4.Packages.Fusion);
local v8 = require(l__ReplicatedStorage__4.LoadOfflinePlayer);
local v9 = require(l__ReplicatedStorage__4.Remotes);
local v10 = v9.Function("GetAdminLogs");
local u1 = v7.State(l__Players__1:GetPlayers());
l__Players__1.PlayerAdded:Connect(function()
	u1:set(l__Players__1:GetPlayers());
end);
l__Players__1.PlayerRemoving:Connect(function()
	u1:set(l__Players__1:GetPlayers());
end);
local u2 = v7.State("None");
local u3 = v7.State({});
local u4 = v7.State({});
local function u5(p1)
	u3:set({});
	u3:set(v10:InvokeServer(p1));
	print(string.format("Loaded %i admin logs", #u3:get()));
end;
local v11 = {
	Name = "Admin", 
	Parent = l__LocalPlayer__2.PlayerGui, 
	DisplayOrder = 2
};
local v12 = {};
local v13 = {
	Visible = v7.Computed(function()
		return u2:get() == "AdminPanel";
	end), 
	Players = u1
};
function v13.LoadBanStatus(p2)
	return v9.Function("CheckIfBanned"):InvokeServer(p2);
end;
function v13.BanUser(p3, p4)
	v9.Event("Ban"):FireServer(p3, p4);
end;
function v13.UnbanUser(p5)
	v9.Event("Unban"):FireServer(p5);
end;
function v13.KickUser(p6)
	v9.Event("Kick"):FireServer(p6);
end;
function v13.ViewBooth(p7)
	v8(p7);
end;
function v13.JoinUserServer(p8)
	v9.Event("JoinUserServer"):FireServer(p8);
end;
function v13.CheckUserInGame(p9)
	return v9.Function("CheckUserInGame"):InvokeServer(p9);
end;
v12[1] = v5(v13);
v12[2] = v6({
	Visible = v7.Computed(function()
		return u2:get() == "AdminLogs";
	end), 
	Logs = u3, 
	HasPrevious = v7.Computed(function()
		return u4:get().previous ~= nil;
	end), 
	OnRefresh = function()
		local v14 = DateTime.now().UnixTimestampMillis / 1000;
		u4:set({
			current = v14
		});
		u5(v14);
	end, 
	OnNext = function()
		local v15 = u3:get();
		u4:set({
			current = v15[#v15].timestamp, 
			previous = u4:get()
		});
		u5(u4:get().current);
	end, 
	OnPrevious = function()
		table.remove(u4, #u4);
		u4:set(u4:get().previous);
		u5(u4:get().current);
	end
});
v11[v7.Children] = v12;
v7.New("ScreenGui")(v11);
l__UserInputService__3.InputBegan:Connect(function(p10, p11)
	if p11 then
		return;
	end;
	if p10.KeyCode == Enum.KeyCode.C and l__UserInputService__3:IsKeyDown(Enum.KeyCode.LeftShift) then
		if u2:get() == "AdminPanel" then
			u2:set("None");
			return;
		else
			u2:set("AdminPanel");
			return;
		end;
	end;
	if p10.KeyCode == Enum.KeyCode.L and l__UserInputService__3:IsKeyDown(Enum.KeyCode.LeftShift) then
		if u2:get() ~= "AdminLogs" then
			u2:set("AdminLogs");
			return;
		end;
	else
		return;
	end;
	u2:set("None");
end);
l__LocalPlayer__2.PlayerGui:WaitForChild("ScreenGui");
v7.Compat(u2):onChange(function()
	l__LocalPlayer__2.PlayerGui.ScreenGui.PanelPicker.Visible = u2:get() == "Picker";
	if u2:get() == "AdminLogs" and #u3:get() == 0 then
		local v16 = DateTime.now().UnixTimestampMillis / 1000;
		u4:set({
			current = v16
		});
		u5(v16);
	end;
end);
l__LocalPlayer__2.PlayerGui.ScreenGui.Buttons.Admin.Visible = true;
l__LocalPlayer__2.PlayerGui.ScreenGui.Buttons.Admin.Activated:Connect(function()
	if u2:get() ~= "None" then
		u2:set("None");
		return;
	end;
	u2:set("Picker");
end);
l__LocalPlayer__2.PlayerGui.ScreenGui.PanelPicker.Logs.Activated:Connect(function()
	u2:set("AdminLogs");
end);
l__LocalPlayer__2.PlayerGui.ScreenGui.PanelPicker.Panel.Activated:Connect(function()
	u2:set("AdminPanel");
end);
